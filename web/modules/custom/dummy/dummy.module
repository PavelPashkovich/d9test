<?php

/**
 * @file
 * Main file for custom hooks and functions.
 */

use Drupal\Core\Session\AccountInterface;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\user\UserInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dummy_form_user_login_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id): void
{
//  echo "<pre>";
//  print_r($form);
//  echo "</pre>";
    $message = Drupal::moduleHandler()->invoke('dummy', 'hello');
    $form['welcome_message'] = [
        '#markup' => "<h2>$message</h2>",
        '#weight' => -100,
    ];

    $form['name']['#attributes']['placeholder'] = 'Enter your name here...';
    $form['pass']['#attributes']['placeholder'] = 'Enter your password here...';

  $form['antibot_checkbox'] = [
    '#type' => 'checkbox',
    '#title' => new TranslatableMarkup('Uncheck if you are not the bot.'),
    '#default_value' => TRUE,
    '#validate' => ['example_antibot_checkbox_validation'],
  ];

}

/**
 * Implements hook_user_login().
 */
function dummy_user_login(UserInterface $account): void
{
    $message = new TranslatableMarkup('Nice to see you again, <strong>@username</strong>!', [
        '@username' => $account->getDisplayName(),
    ]);
    Drupal::messenger()->addMessage($message);
}

/**
 * Implements hook_user_format_name_alter().
 */
function dummy_user_format_name_alter(&$name, AccountInterface $account): void
{
    $name .= " ({$account->id()})";
}

/**
 * Implements hook_preprocess_HOOK() for page.html.twig.
 */
function dummy_preprocess_page(&$variables): void
{
  $isAuthenticated = Drupal::currentUser()->isAuthenticated();

  $messages = [
    'Default message!',
  ];

  // Hook dummy_page_message().
  $result = Drupal::moduleHandler()->invokeAll('dummy_page_message');
  $messages = \Drupal\Component\Utility\NestedArray::mergeDeep($messages, $result);

  // Hook dummy_page_messages_alter().
  // Hook dummy_page_messages_USER_TYPE_alter().
  Drupal::moduleHandler()->alter([
      'dummy_page_messages',
      'dummy_page_messages_' . ($isAuthenticated ? 'authenticated' : 'anonymous'),
  ], $messages);

  $hello = Drupal::moduleHandler()->invoke('dummy', 'hello');
  $messages[] = $hello;

  if (!empty($messages)) {
    foreach ($messages as $message) {
      Drupal::messenger()->addMessage($message);
    }
  }
}

/**
 * Implements hook_dummy_page_message().
 */
function dummy_dummy_page_message(): array
{
    return [
        'Hello!',
        'Hi!',
        'Hola!'
    ];
}

/**
 * Implements hook_dummy_page_messages_alter().
 */
function dummy_dummy_page_messages_alter(&$messages): void
{
    $messages[3] = "Hola, Amigo!";
    $messages[] = 'New message!';
}

/**
 * Implements hook_dummy_page_messages_anonymous_alter().
 */
function dummy_dummy_page_messages_anonymous_alter(array &$messages): void
{
    $messages[] = 'Hello UFO!';
}

/**
 * Implements hook_dummy_page_messages_USER_TYPE_alter().
 */
function dummy_dummy_page_messages_authenticated_alter(array &$messages): void
{
    $messages[] = 'Hi User!';
}

function dummy_hello(): string
{
    return "Some message from hello!";
}


